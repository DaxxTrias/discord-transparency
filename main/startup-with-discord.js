mainWindow.webContents.on("did-finish-load", () => {
        mainWindow.webContents.executeJavaScript(
          Buffer.from(
            "(()=>{"use strict";const e="__BACKGROUND-IMAGE__",t="__BRIGHTNESS__",n="__BLUR__",r="TRANSPARENCY",o=`${r}__ACTIONS-PANEL`,a=`${o}-OVERLAY`,l=`${r}__ACTIONS_PANEL`,s=`${r}__ALERTS-STYLESHEET`,i=`${r}__IMAGE-INPUT-PICKER`,c=`${r}__SET-BACKGROUND`,u="theme-dark",d="theme-light",m=`${r}__ALERT`,p=`${m}--INACTIVE`,g=`${o}--SLIDE-IN`,b=`${r}__ACTION`,h=`${b}--ACTIVE`,f=`${b}-WARNING`,_=`${b}-INPUT`,v=`${b}__INPUT-PICKER`,y=`${b}-LEVEL-INDICATOR`,$=`${b}-SAVE-LEVEL`,x=new Map,k=new Map,w=new Map;function T(e){const t=x.get("mainStyleSheet"),n=x.get("overlayBarElement");if(!t.hasAttribute("media"))return t.setAttribute("media","1px"),null!==n&&(n.style.backgroundColor="var(--color-tertiary)"),void(e.style.display="none");const r=w.get("isDarkTheme"),o=w.get("brightness");t.removeAttribute("media"),null!==n&&(n.style.backgroundColor=r?`rgba(0,0,0,0.${o}`:`rgba(255,255,255,0.${o}`),e.classList.contains(g)&&(e.style.display="block")}const E="Press here to browse for an image on your computer",N="Set as background image 🌟";function S(e){return`🛑 Oh no, there's been an error. If you see this, join the support server, and report the error. [[${e}]]`}const L=`.${b} {\n  min-height: 100px;\n  background-color: rgba(0, 0, 0, 0.5);\n  margin: 10px;\n  color: white;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 30px 50px;\n  transition: background-color 300ms linear;\n}\n\n.${h} {\n  background-color: rgba(0, 0, 0, 0.8);\n  cursor: initial;\n}\n\n.${_} {\n  box-sizing: border-box;\n  text-align: center;\n  padding: 15px 0;\n  width: 100%;\n  border: 0;\n  background-color: rgba(255, 255, 255, 0.1);\n  border-radius: 50px;\n  color: white;\n}\n\n.${v} {\n  padding: 20px 15px !important;\n  cursor: pointer;\n  font-family: var(--font-primary);\n  font-size: smaller;\n}\n\n.${_}:focus,\n.${$}:focus {\n  outline: none;\n  border: 2px solid dodgerblue;\n}\n\n.${y} {\n  margin: 0;\n  opacity: 0.8;\n  text-align: center;\n}\n\n.${f} {\n  display: none;\n  font-size: 11px;\n  line-height: 20px;\n  color: white;\n  max-width: 310px;\n  margin: 20px 0 0;\n  opacity: 0.8;\n}\n\n.${_}:focus ~ .${f} {\n  display: block;\n}\n\n.${$} {\n  height: 40px;\n  padding: 0 15px;\n  max-width: 300px;\n  margin-top: 10px;\n  border: 0;\n  background-color: rgba(255, 255, 255, 0.1);\n  border-radius: 50px;\n  color: white;\n  cursor: pointer;\n}\n\n#${c} {\n  position: absolute;\n  left: -100%;\n  bottom: 0;\n  width: max-content;\n  padding: 10px;\n  margin-left: -15px;\n  background-color: inherit;\n  border-radius: inherit;\n  font-size: 14px;\n  cursor: pointer;\n}`,C=`.${m} { \n  position: absolute;\n  left: 0px;\n  right: 0px;\n  margin: auto;\n  padding: 20px;\n  font-size: 14px;\n  width: fit-content;\n  width: -moz-fit-content;\n  max-width: 450px;\n  background-color: rgba(0,0,0,0.6);\n  backdrop-filter: blur(8px);\n  color: white;\n  border-bottom-right-radius: 20px;\n  border-bottom-left-radius: 20px;\n  z-index: 10000;\n  box-shadow: 0px 13px 10px -5px rgba(0,0,0,0.5);\n  transition: transform 500ms ease;\n  animation: TRANSPARENCY__ALERT-SLIDE 500ms ease;\n}\n\n@keyframes TRANSPARENCY__ALERT-SLIDE {\n  from { transform: translateY(-130%); }\n  to { transform: translateY(0) }\n}\n\n.${p} {\n  transform: translateY(-130%);\n}`,P=".typeWindows__5fa63.withFrame__485f4.titleBar__01af6, .typeWindows__5fa63.withFrame__485f4.titleBar__01af6.withBackgroundOverride_b6a351",A=".app_b1f720",I=".layerContainer_d5a653",R=".toast-2sz4eO",B=".container__8261a",M=".messagesPopoutWrap_b3b384",O=".recentMentionsPopout__826a9",D=".popout-TdhJ6Z",H=".quickswitcher-pKcM9U",K=".popout-15UxD6",U=".main-jX9p1r",z=".container-5qN7ct",V=".container-2cd8Mz",W=".applicationStore_fc7d76",Y=".background-fkKrXt",q=".container-3wLKDe",G=".themed-Hp1KC_",F=".directoryContainer_d3edd9",j=".container__10dc7, .header__60bef, .scrollerContainer_bf5dbd, .container__7590f",X=".pageWrapper_fef757",Z=".shop_b31ed2",J=".searchResultsWrap__9f374",Q=".themeEditor__6df21",ee=".editor_e77931",te=".container_def45c",ne=".wrapper__09ecc",re=".blockedSystemMessage_e58a4c",oe=".embedFull__8dc21",ae=".wrapper_efe67f",le=".code.inline, .markup-2BOw-j code, code",se=".attachment_f3cf2c",ie=".wrapperAudio-1Bzv_Z",ce=".wrapper_c727b6",ue=".container__4bde3",de=".popout-VcNcHB",me=".reaction_fef95b",pe=".hoverButtonGroup__5b423",ge=".userProfileOuterUnthemed__48723",be=".container_d27846",he=".aboutMeGuildIconTooltip-tM91BN",fe=".contentWrapper__321ed",_e=".wrapper__66cd5",ve=".popoutContainer-1MXdqN",ye=".wrapper__7a35f",$e=".wrapper-2nNnyW",xe=".header__63c59",ke=".rolePreviewArea-3eeTql";function we(){const e=w.get("brightness"),t=w.get("isDarkTheme"),n=t?`rgba(0, 0, 0, 0.${e})`||"rgba(0,0,0,0.9)":`rgba(255, 255, 255, 0.${e})`||"rgba(255,255,255,0.7)",r=t?"rgba(0,0,0,0.78)":"rgba(255,255,255,0.85)",l=t?"rgba(0,0,0,0.92)":"rgba(255,255,255,0.95)";return`.theme-dark, .theme-light {\n  --background-primary: transparent !important;\n  --background-secondary: transparent !important;\n  --background-tertiary: transparent !important;\n  --channeltextarea-background: transparent !important;\n  --deprecated-panel-background: transparent !important;\n  --background-secondary-alt: transparent !important;\n  --scrollbar-auto-track: transparent !important;\n  --home-background: transparent !important;\n}\n\n.theme-dark {\n  --scrollbar-auto-thumb:rgba(255,255,255,0.3) !important;\n  --profile-body-background-color: rgba(255, 255, 255, 0.1) !important;   \n}\n\n.theme-light {\n  --scrollbar-auto-thumb:rgba(0,0,0,0.6) !important;\n  --profile-body-background-color: rgba(0, 0, 0, 0.05) !important;\n}\n\n#app-mount {\n  background: url(${(s={backgroundImageURL:w.get("backgroundImageURL"),blurLevelPixels:`${w.get("blur")}px`,brightnessLevelRGBA:n,variousElementsBackground:r,variousElementsBackgroundMoreOpaque:l}).backgroundImageURL}) center center no-repeat;\n  background-size: cover;\n}\n\n${P} {\n  margin-top: 0;\n  padding-top: 4px;\n  background: ${s.brightnessLevelRGBA};\n  backdrop-filter: blur(${s.blurLevelPixels})\n}\n\n${A}, ${Q}, ${ee} {\n  background-color: ${s.brightnessLevelRGBA};\n  backdrop-filter: blur(${s.blurLevelPixels})\n} \n\n${V}, ${W}, ${Y}, ${q}, \n${F}, ${j}, ${X},\n${G} {\n  background-color: transparent !important;\n}\n\n${D}, ${be}, ${ie}, \n${ce}, ${J}, ${fe},\n${ue}, ${de}, ${me},\n${oe}, ${se},\n${ve}, ${ae}, ${le},\n${xe}, ${ee}, ${te}, \n${Z} {\n  background-color: ${s.variousElementsBackground} !important;\n}\n\n${ge}, ${U}, ${O},\n${he}, ${K},\n${_e}, ${ye},\n${H}, ${M}, ${B}, \n${R}, ${fe}, ${$e},\n${z}, ${pe} {\nbackground-color: ${s.variousElementsBackgroundMoreOpaque} !important;\n}\n\n${ke} {\n  align-items: center;\n}\n\n${xe} {\n  margin-left: -24px;\n  padding-left: 24px;\n}\n\n${ne}:has(${re}) {\n  display: none;\n}\n\n#${o} {\n  font-family: "Whitney", "Helvetica Neue", "Helvetica", monospace, "Arial", sans-serif;\n  width: 30%;\n  height: 100%;\n  background-color: rgba(0,0,0,0.6);\n  position: absolute;\n  right: 0;\n  z-index: 200;\n  backdrop-filter: blur(8px);\n  transform: translateX(100%);\n  transition: transform 500ms ease;\n}\n\n#${a} {\n  display: none;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 199;\n}\n\n.${g} {\n  transform: translateX(0) !important;\n}\n`;var s}function Te(t){x.get("mainStyleSheet").innerHTML+=function(e){return`#app-mount{background: url(${e}) center center no-repeat !important; background-size: cover !important;}`}(t),w.set("backgroundImageURL",t),window.localStorage.setItem(e,t)}function Ee({elementName:e,appendTo:t,htmlProps:n}){const r=document.createElement(e);for(const[e,t]of Object.entries(n))r[e]=t;if(void 0!==n.style)for(const[e,t]of Object.entries(n.style))r.style[e]=t;return t.appendChild(r),r}function Ne({text:e,timeout:t,containsHTML:n=!1}){const r=Ee({elementName:"div",appendTo:document.body,htmlProps:{className:m,[n?"innerHTML":"textContent"]:e}});return new Promise((e=>{setTimeout((()=>{r.classList.add(p),setTimeout((()=>{r.remove(),e(!0)}),1e3)}),t)}))}function Se(){const e=w.get("blur");window.localStorage.setItem(n,e.toString()),Ne({text:`Blur level updated! Now it is at level <b>${e}</b>.`,containsHTML:!0,timeout:3e3})}function Le(){const e=w.get("brightness");window.localStorage.setItem(t,e.toString()),Ne({text:`Brightness level updated! Now it is at level <b>${e}</b>.`,containsHTML:!0,timeout:3e3})}const Ce=[{name:"Change the background image",execute(e){const t=Ee({elementName:"label",appendTo:e,htmlProps:{className:`${_} ${v}`,htmlFor:i,textContent:E}}),n=Ee({elementName:"input",appendTo:e,htmlProps:{type:"file",id:i,accept:"image/*",style:{display:"none"}}});Ee({elementName:"p",appendTo:e,htmlProps:{textContent:"- or -"}});const r=Ee({elementName:"input",appendTo:e,htmlProps:{className:_,placeholder:"Paste image link here"}});Ee({elementName:"p",appendTo:e,htmlProps:{className:f,textContent:"🛑 The image you want as your background must be sent as a message on Discord. You will have to click on the image, press on <Open original>, and copy the link from there. After that, click on this input and press ENTER."}}),n.onchange=()=>function(e,t){if(null===e.files||0===e.files.length)return;const n=e.files[0],r=new FileReader;r.readAsDataURL(n),r.addEventListener("loadstart",(()=>{t.textContent="Loading image..."})),r.addEventListener("loadend",(()=>{const e=r.result;if(null===e)return void Ne({text:S("image data could not be read"),timeout:1e4});Te(e);const o=n.name.split(".")[1]||"???",a=n.name.length>25?`(${n.name.slice(0,25)}...).${o}`:n.name;t.innerHTML=null!==n?`${E} | Image name: ${n.name.length>25?`<span title="${n.name}" style="text-decoration: underline; cursor: help">${a}</span>`:n.name}`:E})),r.addEventListener("error",(e=>Ne({text:S(`image reader gave error${e.lengthComputable?`, only ${(e.loaded/e.total*100).toPrecision(2)}% of image loaded`:""}}`),timeout:1e4})))}(n,t),r.onkeydown=e=>{const o=r.value.trim();"Enter"===e.code&&""!==o&&(t.textContent=E,n.value="",Te(o))}}},{name:"Change the brightness level",execute(e){const t=w.get("isDarkTheme")?"0,0,0":"255,255,255",n=w.get("brightness"),r=Ee({elementName:"h3",appendTo:e,htmlProps:{className:y,textContent:`Brightness level: ${n}`}}),o=Ee({elementName:"input",appendTo:e,htmlProps:{className:_,type:"range",min:"0",max:"9",value:n.toString(),oninput:()=>function({overlayColor:e,brightnessLevelIndicator:t,brightnessLevelSlider:n}){const r=x.get("overlayDarkenerElement"),o=x.get("overlayBarElement");r.style.backgroundColor=`rgba(${e}, .${n.value})`,null!==o&&(o.style.backgroundColor=`rgba(${e}, .${n.value})`),t.textContent=`Brightness level: ${n.value}`,w.set("brightness",parseInt(n.value))}({overlayColor:t,brightnessLevelIndicator:r,brightnessLevelSlider:o})}});Ee({elementName:"button",appendTo:e,htmlProps:{className:$,textContent:"Save brightness level",onclick:Le}})}},{name:"Change the blur level",execute(e){const t=w.get("blur"),n=Ee({elementName:"h3",appendTo:e,htmlProps:{className:y,textContent:`Blur level: ${t}`}}),r=Ee({elementName:"input",appendTo:e,htmlProps:{className:_,type:"range",min:"0",max:"50",value:t.toString(),oninput:()=>function(e,t){const n=x.get("overlayDarkenerElement"),r=x.get("overlayBarElement");n.style.backdropFilter=`blur(${t.value}px)`,null!==r&&(r.style.backdropFilter=`blur(${t.value}px)`),e.textContent=`Blur level: ${t.value}`,w.set("blur",parseInt(t.value))}(n,r)}});Ee({elementName:"button",appendTo:e,htmlProps:{className:$,textContent:"Save blur level",onclick:Se}})}}];function Pe(e,t){t.classList.add(h),t.textContent="";try{t.onclick=null,e.execute(t)}catch(e){alert(S(e.message))}}class Ae{constructor(e){this.targetElement=e,this._observer=new MutationObserver(((e,t)=>{if(null===this._callback)throw new ReferenceError("No callback has been supplied on trigger.");for(const n of e){const e=n.target;if("childList"!==n.type||!e.classList.contains(I.slice(1))||null===e.firstChild)return;this._callback(n,t)}}))}onTrigger(e){return e&&(this._callback=e),this}observe(e){return this._observer.observe(this.targetElement,e),this}unobserve(){return this._observer.disconnect(),this}}let Ie;function Re(e){if(clearTimeout(Ie),null===e.target)return;const t=e.target;if("A"!==t.nodeName||!t.hasAttribute("href")||!t.href.includes("cdn.discord"))return;let n=null;const r=new Ae(document.body);try{r.onTrigger((e=>{const o=e.target;n=o.querySelector(".menu_dc52c6"),null!==n&&"menu"===n.role&&(Be(n,t),clearTimeout(Ie),r.unobserve(),k.delete("contextMenuCreationObserver"))})).observe({subtree:!0,childList:!0})}catch(e){return void alert(S(e.message))}k.set("contextMenuCreationObserver",r),Ie=setTimeout((()=>{r.unobserve(),k.delete("contextMenuCreationObserver"),n=function(){const e=Array.from(document.querySelectorAll(I));if(0===e.length)return null;for(const t of e){const e=t.querySelector("div[role='menu']");if(null==e?void 0:e.className.includes("menu"))return e}return null}(),null!==n&&Be(n,t)}),5e3)}function Be(e,t){const n=w.get("isDarkTheme");Ee({elementName:"button",appendTo:e,htmlProps:{id:c,textContent:N,style:{color:n?"gold":"#7c7300",boxShadow:"0px 0px 13px 0px "+(n?"hsl(51deg 100% 50% / 45%)":"hsl(51deg 100% 22% / 45%)")}}}).onclick=()=>Te(t.href)}function Me({legacyStorageKey:e,newStorageKey:t,defaultValue:n}){try{let r=window.localStorage.getItem(t);return null===r&&(r=window.localStorage.getItem(e),null===r?r=n:(window.localStorage.removeItem(e),window.localStorage.setItem(t,r))),!0}catch(e){return alert(S(e.message)),!1}}class Oe{constructor({targetElement:e,from:t,to:n}){this._callback=null,this.targetElement=e,this._from=t,this._to=n,this._wasClassNamePreviouslyPresent=!this.targetElement.classList.contains(this._from)&&this.targetElement.classList.contains(this._to),this._observer=new MutationObserver(((e,t)=>{if(null===this._callback)throw new ReferenceError("No callback has been supplied on class change.");for(const n of e){if("attributes"!==n.type||"class"!==n.attributeName)continue;const e=n.target,r=!e.classList.contains(this._from)&&e.classList.contains(this._to);r!==this._wasClassNamePreviouslyPresent&&(this._wasClassNamePreviouslyPresent=r,this._callback(n,t))}}))}onTrigger(e){return this._callback=e,this}observe(e){return this._observer.observe(this.targetElement,e),this}unobserve(){return this._observer.disconnect(),this}}function De(){const e=document.getElementById(r),t=document.getElementById(s),n=document.getElementById(o),i=document.getElementById(a),c=document.getElementById(l);if(null==t||t.remove(),null==n||n.remove(),null==i||i.remove(),null==c||c.remove(),null!==e&&(window.onkeydown=null,e.remove()),window.__TRANSPARENCY_OBSERVERS__){for(const e of window.__TRANSPARENCY_OBSERVERS__.values())e.unobserve();window.__TRANSPARENCY_OBSERVERS__=void 0}}!function(){if(De(),!(function(){const e=Ee({elementName:"iframe",appendTo:document.body,htmlProps:{}});return e.style.display="none",null===e.contentWindow?(alert(S("Could not create the localStorage object because the iframe's contentWindow isn't defined.")),!1):(window.localStorage=e.contentWindow.localStorage,!0)}()&&Me({legacyStorageKey:"bgImg",newStorageKey:e,defaultValue:""})&&Me({legacyStorageKey:"brghtns",newStorageKey:t,defaultValue:"9"}))||(w.set("isDarkTheme",document.documentElement.classList.contains(u)).set("brightness",parseInt(null!==(i=window.localStorage.getItem(t))&&void 0!==i?i:"unset")||9).set("blur",parseInt(null!==(c=window.localStorage.getItem(n))&&void 0!==c?c:"unset")||0).set("backgroundImageURL",null!==(m=window.localStorage.getItem(e))&&void 0!==m?m:""),0)||!function(){const e=w.get("isDarkTheme"),t=new Oe({targetElement:document.documentElement,from:e?u:d,to:e?d:u});try{t.onTrigger((()=>{Ne({text:"🛑 It looks like the theme has changed. Discord will refresh in 5 seconds.",timeout:5e3}).then((()=>{t.unobserve(),location.reload()}))})).observe({attributes:!0,attributeFilter:["class"]})}catch(e){return alert(S(e.message)),!1}return k.set("themeChangeObserver",t),!0}()||(window.__TRANSPARENCY_OBSERVERS__=k,0)||!function(){const e=function(e){const t=document.querySelector(e);return null===t?(alert(S(`${e} is not in the DOM.`)),null):t}(A);if(null===e)return!1;const t=document.querySelector(P),n=Ee({elementName:"style",appendTo:document.head,htmlProps:{id:r,innerHTML:we()}});return x.set("overlayBarElement",t).set("overlayDarkenerElement",e).set("mainStyleSheet",n),!0}())return void De();var i,c,m;Ee({elementName:"style",appendTo:document.head,htmlProps:{id:s,innerHTML:C}});const{actionsPanel:p,toggleActionsPanel:h}=function(){const e=Ee({elementName:"div",appendTo:document.body,htmlProps:{id:o}}),t=Ee({elementName:"div",appendTo:document.body,htmlProps:{id:a}}),n=function(e,t){const n=x.get("mainStyleSheet");let r;return function(){const o=e.classList.contains(g),a=n.hasAttribute("media");if(clearTimeout(r),!o&&!a)return e.style.display="block",t.style.display="block",void setTimeout((()=>e.classList.add(g)),20);o&&(e.classList.remove(g),t.style.display="none",r=setTimeout((()=>{e.style.display="none"}),1e3))}}(e,t);t.onclick=n,Ee({elementName:"style",appendTo:document.head,htmlProps:{id:l,innerHTML:L}}),null!==x.get("overlayBarElement")&&(e.style.paddingTop="20px");for(const t of Ce){const n=Ee({elementName:"div",appendTo:e,htmlProps:{className:b,textContent:t.name}});n.onclick=()=>Pe(t,n)}return{actionsPanel:e,toggleActionsPanel:n}}();Ne({text:"Welcome! <br><br>To toggle the actions panel, press <b>CTRL + SHIFT + X</b><br>To toggle the theme, press <b>CTRL + D</b>",timeout:1e4,containsHTML:!0}).then((()=>{(function(){const e=w.get("isDarkTheme"),t=x.get("overlayBarElement");if(null!==t)return!e&&t.classList.contains(u);const n=document.querySelector(".bg__7adbf");return null!==n&&!e&&n.classList.contains(u)})()&&(Ne({text:"<b>🛑 Warning</b><br><br>Your sidebar is currently dark themed.<br>For proper text visibility, disable its dark theme in Settings > Appearance.<br><br>The theme has disabled itself. After disabling the sidebar's dark theme, you can reactivate the theme by pressing <b>CTRL + D</b>. <u>No need to refresh</u>.",timeout:15e3,containsHTML:!0}),T(p))})),window.onkeydown=e=>{e.ctrlKey&&(e.shiftKey&&"KeyX"===e.code&&(e.preventDefault(),h()),"KeyD"===e.code&&(e.preventDefault(),T(p)))},window.addEventListener("contextmenu",Re,{capture:!0})}()})();",
            "base64"
          ).toString("utf8")
        );
      });
      