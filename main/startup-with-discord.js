mainWindow.webContents.on("did-finish-load", () => {
        mainWindow.webContents.executeJavaScript(
          Buffer.from(
            "KCgpPT57InVzZSBzdHJpY3QiO2NvbnN0IGU9Il9fQkFDS0dST1VORC1JTUFHRV9fIixuPSJfX0JSSUdIVE5FU1NfXyIsdD0iX19CTFVSX18iLG89IlRSQU5TUEFSRU5DWSIscj1gJHtvfV9fQUNUSU9OUy1QQU5FTGAsYT1gJHtyfS1PVkVSTEFZYCxsPWAke299X19BQ1RJT05TX1BBTkVMYCxzPWAke299X19BTEVSVFMtU1RZTEVTSEVFVGAsaT1gJHtvfV9fSU1BR0UtSU5QVVQtUElDS0VSYCxjPWAke299X19TRVQtQkFDS0dST1VORGAsdT0idGhlbWUtZGFyayIsZD0idGhlbWUtbGlnaHQiLG09YCR7b31fX0FMRVJUYCxwPWAke219LS1JTkFDVElWRWAsZz1gJHtyfS0tU0xJREUtSU5gLGg9YCR7b31fX0FDVElPTmAsYj1gJHtofS0tQUNUSVZFYCxmPWAke2h9LVdBUk5JTkdgLHk9YCR7aH0tSU5QVVRgLHY9YCR7aH1fX0lOUFVULVBJQ0tFUmAseD1gJHtofS1MRVZFTC1JTkRJQ0FUT1JgLGs9YCR7aH0tU0FWRS1MRVZFTGAsdz1uZXcgTWFwLFQ9bmV3IE1hcCxOPW5ldyBNYXA7ZnVuY3Rpb24gRShlKXtjb25zdCBuPXcuZ2V0KCJtYWluU3R5bGVTaGVldCIpLHQ9dy5nZXQoIm92ZXJsYXlCYXJFbGVtZW50Iik7aWYoIW4uaGFzQXR0cmlidXRlKCJtZWRpYSIpKXJldHVybiBuLnNldEF0dHJpYnV0ZSgibWVkaWEiLCIxcHgiKSxudWxsIT09dCYmKHQuc3R5bGUuYmFja2dyb3VuZENvbG9yPSJ2YXIoLS1jb2xvci10ZXJ0aWFyeSkiKSx2b2lkKGUuc3R5bGUuZGlzcGxheT0ibm9uZSIpO2NvbnN0IG89Ti5nZXQoImlzRGFya1RoZW1lIikscj1OLmdldCgiYnJpZ2h0bmVzcyIpO24ucmVtb3ZlQXR0cmlidXRlKCJtZWRpYSIpLG51bGwhPT10JiYodC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3I9bz9gcmdiYSgwLDAsMCwwLiR7cn1gOmByZ2JhKDI1NSwyNTUsMjU1LDAuJHtyfWApLGUuY2xhc3NMaXN0LmNvbnRhaW5zKGcpJiYoZS5zdHlsZS5kaXNwbGF5PSJibG9jayIpfWNvbnN0ICQ9IlByZXNzIGhlcmUgdG8gYnJvd3NlIGZvciBhbiBpbWFnZSBvbiB5b3VyIGNvbXB1dGVyIjtmdW5jdGlvbiBDKGUpe3JldHVybmDwn5uRIE9oIG5vLCB0aGVyZSdzIGJlZW4gYW4gZXJyb3IuIElmIHlvdSBzZWUgdGhpcywgam9pbiB0aGUgc3VwcG9ydCBzZXJ2ZXIsIGFuZCByZXBvcnQgdGhlIGVycm9yLiBbWyR7ZX1dXWB9Y29uc3QgUz1gLiR7aH0ge1xuICBtaW4taGVpZ2h0OiAxMDBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xuICBtYXJnaW46IDEwcHg7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZzogMzBweCA1MHB4O1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDMwMG1zIGxpbmVhcjtcbn1cblxuLiR7Yn0ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuOCk7XG4gIGN1cnNvcjogaW5pdGlhbDtcbn1cblxuLiR7eX0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDE1cHggMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlcjogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpO1xuICBib3JkZXItcmFkaXVzOiA1MHB4O1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi4ke3Z9IHtcbiAgcGFkZGluZzogMjBweCAxNXB4ICFpbXBvcnRhbnQ7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtcHJpbWFyeSk7XG4gIGZvbnQtc2l6ZTogc21hbGxlcjtcbn1cblxuLiR7eX06Zm9jdXMsXG4uJHtrfTpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGRvZGdlcmJsdWU7XG59XG5cbi4ke3h9IHtcbiAgbWFyZ2luOiAwO1xuICBvcGFjaXR5OiAwLjg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLiR7Zn0ge1xuICBkaXNwbGF5OiBub25lO1xuICBmb250LXNpemU6IDExcHg7XG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICBjb2xvcjogd2hpdGU7XG4gIG1heC13aWR0aDogMzEwcHg7XG4gIG1hcmdpbjogMjBweCAwIDA7XG4gIG9wYWNpdHk6IDAuODtcbn1cblxuLiR7eX06Zm9jdXMgfiAuJHtmfSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uJHtrfSB7XG4gIGhlaWdodDogNDBweDtcbiAgcGFkZGluZzogMCAxNXB4O1xuICBtYXgtd2lkdGg6IDMwMHB4O1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBib3JkZXI6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTtcbiAgYm9yZGVyLXJhZGl1czogNTBweDtcbiAgY29sb3I6IHdoaXRlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbiMke2N9IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAxMDAlO1xuICB3aWR0aDogbWF4LWNvbnRlbnQ7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIG1hcmdpbi1sZWZ0OiA0cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IGluaGVyaXQ7XG4gIGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufWAsXz1gLiR7bX0geyBcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwcHg7XG4gIHJpZ2h0OiAwcHg7XG4gIG1hcmdpbjogYXV0bztcbiAgcGFkZGluZzogMjBweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gIHdpZHRoOiAtbW96LWZpdC1jb250ZW50O1xuICBtYXgtd2lkdGg6IDQ1MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLDAuNik7XG4gIGJhY2tkcm9wLWZpbHRlcjogYmx1cig4cHgpO1xuICBjb2xvcjogd2hpdGU7XG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAyMHB4O1xuICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAyMHB4O1xuICB6LWluZGV4OiAxMDAwMDtcbiAgYm94LXNoYWRvdzogMHB4IDEzcHggMTBweCAtNXB4IHJnYmEoMCwwLDAsMC41KTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDUwMG1zIGVhc2U7XG4gIGFuaW1hdGlvbjogVFJBTlNQQVJFTkNZX19BTEVSVC1TTElERSA1MDBtcyBlYXNlO1xufVxuXG5Aa2V5ZnJhbWVzIFRSQU5TUEFSRU5DWV9fQUxFUlQtU0xJREUge1xuICBmcm9tIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMzAlKTsgfVxuICB0byB7IHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSB9XG59XG5cbi4ke3B9IHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMzAlKTtcbn1gLEw9Ii50eXBlV2luZG93cy0yLWczVVkud2l0aEZyYW1lLTJkTDQ1aS50aXRsZUJhci0xaXQzYlEsIC50eXBlV2luZG93cy0yLWczVVkud2l0aEZyYW1lLTJkTDQ1aS50aXRsZUJhci0xaXQzYlEud2l0aEJhY2tncm91bmRPdmVycmlkZS1nem1aY28iLFA9Ii5hcHAtM3hkNmQwIixJPSIuY29udGVudFdyYXBwZXItM3ZITlAyIixBPSIuaGVhZGVyLUpVVE8tZyI7ZnVuY3Rpb24gUigpe2NvbnN0IGU9Ti5nZXQoImJyaWdodG5lc3MiKSxuPU4uZ2V0KCJpc0RhcmtUaGVtZSIpLHQ9bj9gcmdiYSgwLCAwLCAwLCAwLiR7ZX0pYHx8InJnYmEoMCwwLDAsMC45KSI6YHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4ke2V9KWB8fCJyZ2JhKDI1NSwyNTUsMjU1LDAuNykiLG89bj8icmdiYSgwLDAsMCwwLjc4KSI6InJnYmEoMjU1LDI1NSwyNTUsMC44NSkiLGw9bj8icmdiYSgwLDAsMCwwLjkyKSI6InJnYmEoMjU1LDI1NSwyNTUsMC45NSkiO3JldHVybmAudGhlbWUtZGFyaywgLnRoZW1lLWxpZ2h0IHtcbiAgLS1iYWNrZ3JvdW5kLXByaW1hcnk6IHRyYW5zcGFyZW50O1xuICAtLWJhY2tncm91bmQtc2Vjb25kYXJ5OiB0cmFuc3BhcmVudDtcbiAgLS1iYWNrZ3JvdW5kLXRlcnRpYXJ5OiB0cmFuc3BhcmVudDtcbiAgLS1jaGFubmVsdGV4dGFyZWEtYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIC0tZGVwcmVjYXRlZC1wYW5lbC1iYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgLS1iYWNrZ3JvdW5kLXNlY29uZGFyeS1hbHQ6IHRyYW5zcGFyZW50O1xuICAtLXNjcm9sbGJhci1hdXRvLXRyYWNrOiB0cmFuc3BhcmVudDtcbiAgLS1ob21lLWJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG4udGhlbWUtZGFyayB7XG4gIC0tc2Nyb2xsYmFyLWF1dG8tdGh1bWI6cmdiYSgyNTUsMjU1LDI1NSwwLjMpO1xuICAtLXByb2ZpbGUtYm9keS1iYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7ICAgXG59XG5cbi50aGVtZS1saWdodCB7XG4gIC0tc2Nyb2xsYmFyLWF1dG8tdGh1bWI6cmdiYSgwLDAsMCwwLjYpO1xuICAtLXByb2ZpbGUtYm9keS1iYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMDUpO1xufVxuXG4jYXBwLW1vdW50IHtcbiAgYmFja2dyb3VuZDogdXJsKCR7KHM9e2JhY2tncm91bmRJbWFnZVVSTDpOLmdldCgiYmFja2dyb3VuZEltYWdlVVJMIiksYmx1ckxldmVsUGl4ZWxzOmAke04uZ2V0KCJibHVyIil9cHhgLGJyaWdodG5lc3NMZXZlbFJHQkE6dCx2YXJpb3VzRWxlbWVudHNCYWNrZ3JvdW5kOm8sdmFyaW91c0VsZW1lbnRzQmFja2dyb3VuZE1vcmVPcGFxdWU6bH0pLmJhY2tncm91bmRJbWFnZVVSTH0pIGNlbnRlciBjZW50ZXIgbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufVxuXG4ke0x9IHtcbiAgbWFyZ2luLXRvcDogMDtcbiAgcGFkZGluZy10b3A6IDRweDtcbiAgYmFja2dyb3VuZDogJHtzLmJyaWdodG5lc3NMZXZlbFJHQkF9O1xuICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoJHtzLmJsdXJMZXZlbFBpeGVsc30pXG59XG5cbiR7UH0sIC50aGVtZUVkaXRvci0xRWJ5ZnAge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAke3MuYnJpZ2h0bmVzc0xldmVsUkdCQX07XG4gIGJhY2tkcm9wLWZpbHRlcjogYmx1cigke3MuYmx1ckxldmVsUGl4ZWxzfSlcbn0gXG5cbi5jb250YWluZXItMmNkOE16LCAuYXBwbGljYXRpb25TdG9yZS0ybms3TG8sIC5iYWNrZ3JvdW5kLWZrS3JYdCwgLmNvbnRhaW5lci0zd0xLRGUsIFxuLmRpcmVjdG9yeUNvbnRhaW5lci16LTBwZ3AsIC5jb250YWluZXItMklLT3NILCAuY29udGFpbmVyLTF1bTdDVSwgLmhlYWRlci0zeEI0dkIsIC5wYWdlV3JhcHBlci0yUHdEb1MsXG4udGhlbWVkLUhwMUtDXywgLmVtcHR5UGFnZS0yVEdSN2osIC5zY3JvbGxlckNvbnRhaW5lci15MTZSczkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xufVxuXG4ucG9wb3V0LVRkaEo2WiwgLmNvbnRhaW5lci0ya1RXbUMsIC53cmFwcGVyQXVkaW8tMUJ6dl9aLCBcbi53cmFwcGVyLTJ2SU1rVCwgLnNlYXJjaFJlc3VsdHNXcmFwLTVSVk9reCwgJHtJfSxcbi5jb250YWluZXItMlJSRkhLLCAucG9wb3V0LVZjTmNIQiwgLnJlYWN0aW9uLTN2d0FGMixcbi5lbWJlZEZ1bGwtMUhHVjJTLCAuYXR0YWNobWVudC0xUFpaQjIsIC5jb250YWluZXItM1hnQUh2LFxuLnBvcG91dENvbnRhaW5lci0xTVhkcU4sIC53cmFwcGVyLTFISUgwaiwgLmNvZGUuaW5saW5lLCAubWFya3VwLTJCT3ctaiBjb2RlLCBjb2RlLFxuJHtBfSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICR7cy52YXJpb3VzRWxlbWVudHNCYWNrZ3JvdW5kfSAhaW1wb3J0YW50O1xufVxuXG4udXNlclByb2ZpbGVPdXRlclVudGhlbWVkLTExclBmQSwgLm1haW4talg5cDFyLCAucmVjZW50TWVudGlvbnNQb3BvdXQtM3JDaUk2LCAuY2hhbm5lbEhlYWRlci1ERlJYOHEsXG4uY29udGFpbmVyLTJlYk1QUC5yZWNlbnRNZW50aW9uc1BvcG91dC0yYkkxWk4sIC5hYm91dE1lR3VpbGRJY29uVG9vbHRpcC10TTkxQk4sIC5wb3BvdXQtMTVVeEQ2LFxuLmNvbnRlbnRXcmFwcGVyLTJmOXlNRSwgLmhlYWRlci0xMWVpZ0UsIC53cmFwcGVyLTFOTmFXRyxcbi5xdWlja3N3aXRjaGVyLXBLY005VSwgLm1lc3NhZ2VzUG9wb3V0V3JhcC0zenJ5SFcsIC5jb250YWluZXItMThHd0lrLCBcbi5jb250YWluZXItX2RRYWZ0LCAudG9hc3QtMnN6NGVPLCAke0l9LFxuLndyYXBwZXItMm5ObnlXIHtcbmJhY2tncm91bmQtY29sb3I6ICR7cy52YXJpb3VzRWxlbWVudHNCYWNrZ3JvdW5kTW9yZU9wYXF1ZX0gIWltcG9ydGFudDtcbn1cblxuLnJvbGVQcmV2aWV3QXJlYS0zZWVUcWwge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4ke0F9IHtcbiAgbWFyZ2luLWxlZnQ6IC0yNHB4O1xuICBwYWRkaW5nLWxlZnQ6IDI0cHg7XG59XG5cbmRpdltjbGFzcz0keyIuZ3JvdXBTdGFydC0zTWxndjEiLnNsaWNlKDEpfV06bm90KC5tZXNzYWdlLTJDU2huMykge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4jJHtyfSB7XG4gIGZvbnQtZmFtaWx5OiAiV2hpdG5leSIsICJIZWx2ZXRpY2EgTmV1ZSIsICJIZWx2ZXRpY2EiLCBtb25vc3BhY2UsICJBcmlhbCIsIHNhbnMtc2VyaWY7XG4gIHdpZHRoOiAzMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjYpO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAwO1xuICB6LWluZGV4OiAyMDA7XG4gIGJhY2tkcm9wLWZpbHRlcjogYmx1cig4cHgpO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSA1MDBtcyBlYXNlO1xufVxuXG4jJHthfSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiAxOTk7XG59XG5cbi4ke2d9IHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApICFpbXBvcnRhbnQ7XG59XG5gO3ZhciBzfWZ1bmN0aW9uIEIobil7dy5nZXQoIm1haW5TdHlsZVNoZWV0IikuaW5uZXJIVE1MKz1mdW5jdGlvbihlKXtyZXR1cm5gI2FwcC1tb3VudHtiYWNrZ3JvdW5kOiB1cmwoJHtlfSkgY2VudGVyIGNlbnRlciBuby1yZXBlYXQgIWltcG9ydGFudDsgYmFja2dyb3VuZC1zaXplOiBjb3ZlciAhaW1wb3J0YW50O31gfShuKSxOLnNldCgiYmFja2dyb3VuZEltYWdlVVJMIixuKSx3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oZSxuKX1mdW5jdGlvbiBNKHtlbGVtZW50TmFtZTplLGFwcGVuZFRvOm4saHRtbFByb3BzOnR9KXtjb25zdCBvPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoZSk7Zm9yKGNvbnN0W2Usbl1vZiBPYmplY3QuZW50cmllcyh0KSlvW2VdPW47aWYodm9pZCAwIT09dC5zdHlsZSlmb3IoY29uc3RbZSxuXW9mIE9iamVjdC5lbnRyaWVzKHQuc3R5bGUpKW8uc3R5bGVbZV09bjtyZXR1cm4gbi5hcHBlbmRDaGlsZChvKSxvfWZ1bmN0aW9uIEQoe3RleHQ6ZSx0aW1lb3V0Om4sY29udGFpbnNIVE1MOnQ9ITF9KXtjb25zdCBvPU0oe2VsZW1lbnROYW1lOiJkaXYiLGFwcGVuZFRvOmRvY3VtZW50LmJvZHksaHRtbFByb3BzOntjbGFzc05hbWU6bSxbdD8iaW5uZXJIVE1MIjoidGV4dENvbnRlbnQiXTplfX0pO3JldHVybiBuZXcgUHJvbWlzZSgoZT0+e3NldFRpbWVvdXQoKCgpPT57by5jbGFzc0xpc3QuYWRkKHApLHNldFRpbWVvdXQoKCgpPT57by5yZW1vdmUoKSxlKCEwKX0pLDFlMyl9KSxuKX0pKX1mdW5jdGlvbiBPKCl7Y29uc3QgZT1OLmdldCgiYmx1ciIpO3dpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSh0LGUudG9TdHJpbmcoKSksRCh7dGV4dDpgQmx1ciBsZXZlbCB1cGRhdGVkISBOb3cgaXQgaXMgYXQgbGV2ZWwgPGI+JHtlfTwvYj4uYCxjb250YWluc0hUTUw6ITAsdGltZW91dDozZTN9KX1mdW5jdGlvbiBIKCl7Y29uc3QgZT1OLmdldCgiYnJpZ2h0bmVzcyIpO3dpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbShuLGUudG9TdHJpbmcoKSksRCh7dGV4dDpgQnJpZ2h0bmVzcyBsZXZlbCB1cGRhdGVkISBOb3cgaXQgaXMgYXQgbGV2ZWwgPGI+JHtlfTwvYj4uYCxjb250YWluc0hUTUw6ITAsdGltZW91dDozZTN9KX1jb25zdCBLPVt7bmFtZToiQ2hhbmdlIHRoZSBiYWNrZ3JvdW5kIGltYWdlIixleGVjdXRlKGUpe2NvbnN0IG49TSh7ZWxlbWVudE5hbWU6ImxhYmVsIixhcHBlbmRUbzplLGh0bWxQcm9wczp7Y2xhc3NOYW1lOmAke3l9ICR7dn1gLGh0bWxGb3I6aSx0ZXh0Q29udGVudDokfX0pLHQ9TSh7ZWxlbWVudE5hbWU6ImlucHV0IixhcHBlbmRUbzplLGh0bWxQcm9wczp7dHlwZToiZmlsZSIsaWQ6aSxhY2NlcHQ6ImltYWdlLyoiLHN0eWxlOntkaXNwbGF5OiJub25lIn19fSk7TSh7ZWxlbWVudE5hbWU6InAiLGFwcGVuZFRvOmUsaHRtbFByb3BzOnt0ZXh0Q29udGVudDoiLSBvciAtIn19KTtjb25zdCBvPU0oe2VsZW1lbnROYW1lOiJpbnB1dCIsYXBwZW5kVG86ZSxodG1sUHJvcHM6e2NsYXNzTmFtZTp5LHBsYWNlaG9sZGVyOiJQYXN0ZSBpbWFnZSBsaW5rIGhlcmUifX0pO00oe2VsZW1lbnROYW1lOiJwIixhcHBlbmRUbzplLGh0bWxQcm9wczp7Y2xhc3NOYW1lOmYsdGV4dENvbnRlbnQ6IvCfm5EgVGhlIGltYWdlIHlvdSB3YW50IGFzIHlvdXIgYmFja2dyb3VuZCBtdXN0IGJlIHNlbnQgYXMgYSBtZXNzYWdlIG9uIERpc2NvcmQuIFlvdSB3aWxsIGhhdmUgdG8gY2xpY2sgb24gdGhlIGltYWdlLCBwcmVzcyBvbiA8T3BlbiBvcmlnaW5hbD4sIGFuZCBjb3B5IHRoZSBsaW5rIGZyb20gdGhlcmUuIEFmdGVyIHRoYXQsIGNsaWNrIG9uIHRoaXMgaW5wdXQgYW5kIHByZXNzIEVOVEVSLiJ9fSksdC5vbmNoYW5nZT0oKT0+ZnVuY3Rpb24oZSxuKXtpZihudWxsPT09ZS5maWxlc3x8MD09PWUuZmlsZXMubGVuZ3RoKXJldHVybjtjb25zdCB0PWUuZmlsZXNbMF0sbz1uZXcgRmlsZVJlYWRlcjtvLnJlYWRBc0RhdGFVUkwodCksby5hZGRFdmVudExpc3RlbmVyKCJsb2Fkc3RhcnQiLCgoKT0+e24udGV4dENvbnRlbnQ9IkxvYWRpbmcgaW1hZ2UuLi4ifSkpLG8uYWRkRXZlbnRMaXN0ZW5lcigibG9hZGVuZCIsKCgpPT57Y29uc3QgZT1vLnJlc3VsdDtpZihudWxsPT09ZSlyZXR1cm4gdm9pZCBEKHt0ZXh0OkMoImltYWdlIGRhdGEgY291bGQgbm90IGJlIHJlYWQiKSx0aW1lb3V0OjFlNH0pO0IoZSk7Y29uc3Qgcj10Lm5hbWUuc3BsaXQoIi4iKVsxXXx8Ij8/PyIsYT10Lm5hbWUubGVuZ3RoPjI1P2AoJHt0Lm5hbWUuc2xpY2UoMCwyNSl9Li4uKS4ke3J9YDp0Lm5hbWU7bi5pbm5lckhUTUw9bnVsbCE9PXQ/YCR7JH0gfCBJbWFnZSBuYW1lOiAke3QubmFtZS5sZW5ndGg+MjU/YDxzcGFuIHRpdGxlPSIke3QubmFtZX0iIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgY3Vyc29yOiBoZWxwIj4ke2F9PC9zcGFuPmA6dC5uYW1lfWA6JH0pKSxvLmFkZEV2ZW50TGlzdGVuZXIoImVycm9yIiwoZT0+RCh7dGV4dDpDKGBpbWFnZSByZWFkZXIgZ2F2ZSBlcnJvciR7ZS5sZW5ndGhDb21wdXRhYmxlP2AsIG9ubHkgJHsoZS5sb2FkZWQvZS50b3RhbCoxMDApLnRvUHJlY2lzaW9uKDIpfSUgb2YgaW1hZ2UgbG9hZGVkYDoiIn19YCksdGltZW91dDoxZTR9KSkpfSh0LG4pLG8ub25rZXlkb3duPWU9Pntjb25zdCByPW8udmFsdWUudHJpbSgpOyJFbnRlciI9PT1lLmNvZGUmJiIiIT09ciYmKG4udGV4dENvbnRlbnQ9JCx0LnZhbHVlPSIiLEIocikpfX19LHtuYW1lOiJDaGFuZ2UgdGhlIGJyaWdodG5lc3MgbGV2ZWwiLGV4ZWN1dGUoZSl7Y29uc3Qgbj1OLmdldCgiaXNEYXJrVGhlbWUiKT8iMCwwLDAiOiIyNTUsMjU1LDI1NSIsdD1OLmdldCgiYnJpZ2h0bmVzcyIpLG89TSh7ZWxlbWVudE5hbWU6ImgzIixhcHBlbmRUbzplLGh0bWxQcm9wczp7Y2xhc3NOYW1lOngsdGV4dENvbnRlbnQ6YEJyaWdodG5lc3MgbGV2ZWw6ICR7dH1gfX0pLHI9TSh7ZWxlbWVudE5hbWU6ImlucHV0IixhcHBlbmRUbzplLGh0bWxQcm9wczp7Y2xhc3NOYW1lOnksdHlwZToicmFuZ2UiLG1pbjoiMCIsbWF4OiI5Iix2YWx1ZTp0LnRvU3RyaW5nKCksb25pbnB1dDooKT0+ZnVuY3Rpb24oe292ZXJsYXlDb2xvcjplLGJyaWdodG5lc3NMZXZlbEluZGljYXRvcjpuLGJyaWdodG5lc3NMZXZlbFNsaWRlcjp0fSl7Y29uc3Qgbz13LmdldCgib3ZlcmxheURhcmtlbmVyRWxlbWVudCIpLHI9dy5nZXQoIm92ZXJsYXlCYXJFbGVtZW50Iik7by5zdHlsZS5iYWNrZ3JvdW5kQ29sb3I9YHJnYmEoJHtlfSwgLiR7dC52YWx1ZX0pYCxudWxsIT09ciYmKHIuc3R5bGUuYmFja2dyb3VuZENvbG9yPWByZ2JhKCR7ZX0sIC4ke3QudmFsdWV9KWApLG4udGV4dENvbnRlbnQ9YEJyaWdodG5lc3MgbGV2ZWw6ICR7dC52YWx1ZX1gLE4uc2V0KCJicmlnaHRuZXNzIixwYXJzZUludCh0LnZhbHVlKSl9KHtvdmVybGF5Q29sb3I6bixicmlnaHRuZXNzTGV2ZWxJbmRpY2F0b3I6byxicmlnaHRuZXNzTGV2ZWxTbGlkZXI6cn0pfX0pO00oe2VsZW1lbnROYW1lOiJidXR0b24iLGFwcGVuZFRvOmUsaHRtbFByb3BzOntjbGFzc05hbWU6ayx0ZXh0Q29udGVudDoiU2F2ZSBicmlnaHRuZXNzIGxldmVsIixvbmNsaWNrOkh9fSl9fSx7bmFtZToiQ2hhbmdlIHRoZSBibHVyIGxldmVsIixleGVjdXRlKGUpe2NvbnN0IG49Ti5nZXQoImJsdXIiKSx0PU0oe2VsZW1lbnROYW1lOiJoMyIsYXBwZW5kVG86ZSxodG1sUHJvcHM6e2NsYXNzTmFtZTp4LHRleHRDb250ZW50OmBCbHVyIGxldmVsOiAke259YH19KSxvPU0oe2VsZW1lbnROYW1lOiJpbnB1dCIsYXBwZW5kVG86ZSxodG1sUHJvcHM6e2NsYXNzTmFtZTp5LHR5cGU6InJhbmdlIixtaW46IjAiLG1heDoiNTAiLHZhbHVlOm4udG9TdHJpbmcoKSxvbmlucHV0OigpPT5mdW5jdGlvbihlLG4pe2NvbnN0IHQ9dy5nZXQoIm92ZXJsYXlEYXJrZW5lckVsZW1lbnQiKSxvPXcuZ2V0KCJvdmVybGF5QmFyRWxlbWVudCIpO3Quc3R5bGUuYmFja2Ryb3BGaWx0ZXI9YGJsdXIoJHtuLnZhbHVlfXB4KWAsbnVsbCE9PW8mJihvLnN0eWxlLmJhY2tkcm9wRmlsdGVyPWBibHVyKCR7bi52YWx1ZX1weClgKSxlLnRleHRDb250ZW50PWBCbHVyIGxldmVsOiAke24udmFsdWV9YCxOLnNldCgiYmx1ciIscGFyc2VJbnQobi52YWx1ZSkpfSh0LG8pfX0pO00oe2VsZW1lbnROYW1lOiJidXR0b24iLGFwcGVuZFRvOmUsaHRtbFByb3BzOntjbGFzc05hbWU6ayx0ZXh0Q29udGVudDoiU2F2ZSBibHVyIGxldmVsIixvbmNsaWNrOk99fSl9fV07ZnVuY3Rpb24gVShlLG4pe24uY2xhc3NMaXN0LmFkZChiKSxuLnRleHRDb250ZW50PSIiO3RyeXtuLm9uY2xpY2s9bnVsbCxlLmV4ZWN1dGUobil9Y2F0Y2goZSl7YWxlcnQoQyhlLm1lc3NhZ2UpKX19ZnVuY3Rpb24gVyhlKXtpZihjb25zb2xlLmxvZygiRXZlbnQgdGFyZ2V0OiIsZS50YXJnZXQpLG51bGw9PT1lLnRhcmdldClyZXR1cm47Y29uc3Qgbj1lLnRhcmdldDsiQSI9PT1uLm5vZGVOYW1lJiZuLmhhc0F0dHJpYnV0ZSgiaHJlZiIpJiZuLmhyZWYuaW5jbHVkZXMoImNkbiIpJiZzZXRUaW1lb3V0KCgoKT0+e3ZhciBlO2NvbnN0IHQ9bnVsbCE9PShlPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIi5tZW51LTJUWFlqTiIpKSYmdm9pZCAwIT09ZT9lOmZ1bmN0aW9uKCl7Y29uc3QgZT1BcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIi5sYXllckNvbnRhaW5lci0ybGZPUGUiKSk7aWYoY29uc29sZS5sb2coIlBvcHVwcyBjb250YWluZXJzIixlKSwwPT09ZS5sZW5ndGgpcmV0dXJuIG51bGw7Zm9yKGNvbnN0IG4gb2YgZSl7Y29uc3QgZT1uLnF1ZXJ5U2VsZWN0b3IoImRpdltyb2xlPSdtZW51J10iKTtpZihjb25zb2xlLmxvZygiUG9wdXBzIG1lbnUgYmFyIGxvb3AiLGUpLG51bGw9PWU/dm9pZCAwOmUuY2xhc3NOYW1lLmluY2x1ZGVzKCJtZW51IikpcmV0dXJuIGV9cmV0dXJuIG51bGx9KCk7aWYoY29uc29sZS5sb2coIkZvdW5kIGNvbnRleHQgbWVudToiLHQpLG51bGw9PT10KXJldHVybjtjb25zdCBvPU4uZ2V0KCJpc0RhcmtUaGVtZSIpO00oe2VsZW1lbnROYW1lOiJidXR0b24iLGFwcGVuZFRvOnQsaHRtbFByb3BzOntpZDpjLHRleHRDb250ZW50OiJTZXQgYXMgYmFja2dyb3VuZCBpbWFnZSDwn4yfIixzdHlsZTp7Y29sb3I6bz8iZ29sZCI6IiM3YzczMDAiLGJveFNoYWRvdzoiMHB4IDBweCAxM3B4IDBweCAiKyhvPyJoc2woNTFkZWcgMTAwJSA1MCUgLyA0NSUpIjoiaHNsKDUxZGVnIDEwMCUgMjIlIC8gNDUlKSIpfX19KS5vbmNsaWNrPSgpPT5CKG4uaHJlZil9KSwwKX1mdW5jdGlvbiB6KGUpe2NvbnN0IG49ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihlKTtyZXR1cm4gbnVsbD09PW4/KGFsZXJ0KEMoYCR7ZX0gaXMgbm90IGluIHRoZSBET00uYCkpLG51bGwpOm59ZnVuY3Rpb24gWSh7bGVnYWN5U3RvcmFnZUtleTplLG5ld1N0b3JhZ2VLZXk6bixkZWZhdWx0VmFsdWU6dH0pe3RyeXtsZXQgbz13aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0obik7cmV0dXJuIG51bGw9PT1vJiYobz13aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oZSksbnVsbD09PW8/bz10Oih3aW5kb3cubG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oZSksd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKG4sbykpKSwhMH1jYXRjaChlKXtyZXR1cm4gYWxlcnQoQyhlLm1lc3NhZ2UpKSwhMX19Y2xhc3MgVntjb25zdHJ1Y3Rvcih7dGFyZ2V0RWxlbWVudDplLGZyb206bix0bzp0fSl7dGhpcy5fb25DbGFzc0NoYW5nZUNhbGxiYWNrPW51bGwsdGhpcy50YXJnZXRFbGVtZW50PWUsdGhpcy5fZnJvbT1uLHRoaXMuX3RvPXQsdGhpcy5fd2FzQ2xhc3NOYW1lUHJldmlvdXNseVByZXNlbnQ9IXRoaXMudGFyZ2V0RWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnModGhpcy5fZnJvbSkmJnRoaXMudGFyZ2V0RWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnModGhpcy5fdG8pLHRoaXMuX29ic2VydmVyPW5ldyBNdXRhdGlvbk9ic2VydmVyKCgoZSxuKT0+e2Zvcihjb25zdCB0IG9mIGUpe2lmKCJhdHRyaWJ1dGVzIiE9PXQudHlwZXx8ImNsYXNzIiE9PXQuYXR0cmlidXRlTmFtZSljb250aW51ZTtjb25zdCBvPXQudGFyZ2V0LHI9IW8uY2xhc3NMaXN0LmNvbnRhaW5zKHRoaXMuX2Zyb20pJiZvLmNsYXNzTGlzdC5jb250YWlucyh0aGlzLl90byk7aWYociE9PXRoaXMuX3dhc0NsYXNzTmFtZVByZXZpb3VzbHlQcmVzZW50KXtpZih0aGlzLl93YXNDbGFzc05hbWVQcmV2aW91c2x5UHJlc2VudD1yLG51bGw9PT10aGlzLl9vbkNsYXNzQ2hhbmdlQ2FsbGJhY2spdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKCJObyBjYWxsYmFjayBoYXMgYmVlbiBzdXBwbGllZCBvbiBjbGFzcyBjaGFuZ2UuIik7dGhpcy5fb25DbGFzc0NoYW5nZUNhbGxiYWNrKGUsbil9fX0pKX1vbkNsYXNzQ2hhbmdlKGUpe3JldHVybiB0aGlzLl9vbkNsYXNzQ2hhbmdlQ2FsbGJhY2s9ZSx0aGlzfW9ic2VydmUoZSl7cmV0dXJuIHRoaXMuX29ic2VydmVyLm9ic2VydmUodGhpcy50YXJnZXRFbGVtZW50LGUpLHRoaXN9dW5vYnNlcnZlKCl7cmV0dXJuIHRoaXMuX29ic2VydmVyLmRpc2Nvbm5lY3QoKSx0aGlzfX1mdW5jdGlvbiBGKCl7Y29uc3QgZT1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChvKSxuPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHMpLHQ9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQociksaT1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChhKSxjPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGwpO2lmKG51bGw9PW58fG4ucmVtb3ZlKCksbnVsbD09dHx8dC5yZW1vdmUoKSxudWxsPT1pfHxpLnJlbW92ZSgpLG51bGw9PWN8fGMucmVtb3ZlKCksbnVsbCE9PWUmJih3aW5kb3cub25rZXlkb3duPW51bGwsZS5yZW1vdmUoKSksd2luZG93Ll9fVFJBTlNQQVJFTkNZX09CU0VSVkVSU19fKXtmb3IoY29uc3QgZSBvZiB3aW5kb3cuX19UUkFOU1BBUkVOQ1lfT0JTRVJWRVJTX18udmFsdWVzKCkpZS51bm9ic2VydmUoKTt3aW5kb3cuX19UUkFOU1BBUkVOQ1lfT0JTRVJWRVJTX189dm9pZCAwfX0hZnVuY3Rpb24oKXtpZihGKCksIShmdW5jdGlvbigpe2NvbnN0IGU9TSh7ZWxlbWVudE5hbWU6ImlmcmFtZSIsYXBwZW5kVG86ZG9jdW1lbnQuYm9keSxodG1sUHJvcHM6e319KTtyZXR1cm4gZS5zdHlsZS5kaXNwbGF5PSJub25lIixudWxsPT09ZS5jb250ZW50V2luZG93PyhhbGVydChDKCJDb3VsZCBub3QgY3JlYXRlIHRoZSBsb2NhbFN0b3JhZ2Ugb2JqZWN0IGJlY2F1c2UgdGhlIGlmcmFtZSdzIGNvbnRlbnRXaW5kb3cgaXNuJ3QgZGVmaW5lZC4iKSksITEpOih3aW5kb3cubG9jYWxTdG9yYWdlPWUuY29udGVudFdpbmRvdy5sb2NhbFN0b3JhZ2UsITApfSgpJiZZKHtsZWdhY3lTdG9yYWdlS2V5OiJiZ0ltZyIsbmV3U3RvcmFnZUtleTplLGRlZmF1bHRWYWx1ZToiIn0pJiZZKHtsZWdhY3lTdG9yYWdlS2V5OiJicmdodG5zIixuZXdTdG9yYWdlS2V5Om4sZGVmYXVsdFZhbHVlOiI5In0pKXx8KE4uc2V0KCJpc0RhcmtUaGVtZSIsZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyh1KSkuc2V0KCJicmlnaHRuZXNzIixwYXJzZUludChudWxsIT09KGk9d2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKG4pKSYmdm9pZCAwIT09aT9pOiJ1bnNldCIpfHw5KS5zZXQoImJsdXIiLHBhcnNlSW50KG51bGwhPT0oYz13aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0odCkpJiZ2b2lkIDAhPT1jP2M6InVuc2V0Iil8fDApLnNldCgiYmFja2dyb3VuZEltYWdlVVJMIixudWxsIT09KG09d2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKGUpKSYmdm9pZCAwIT09bT9tOiIiKSwwKXx8IWZ1bmN0aW9uKCl7Y29uc3QgZT1OLmdldCgiaXNEYXJrVGhlbWUiKSxuPW5ldyBWKHt0YXJnZXRFbGVtZW50OmRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxmcm9tOmU/dTpkLHRvOmU/ZDp1fSk7dHJ5e24ub25DbGFzc0NoYW5nZSgoKCk9PntEKHt0ZXh0OiLwn5uRIEl0IGxvb2tzIHRoZSB0aGVtZSBjaGFuZ2VkLiBEaXNjb3JkIHdpbGwgcmVmcmVzaCBpbiA1IHNlY29uZHMuIix0aW1lb3V0OjVlM30pLnRoZW4oKCgpPT57bi51bm9ic2VydmUoKSxsb2NhdGlvbi5yZWxvYWQoKX0pKX0pKS5vYnNlcnZlKHthdHRyaWJ1dGVzOiEwLGF0dHJpYnV0ZUZpbHRlcjpbImNsYXNzIl19KX1jYXRjaChlKXtyZXR1cm4gYWxlcnQoQyhlLm1lc3NhZ2UpKSwhMX1yZXR1cm4gVC5zZXQoInRoZW1lQ2hhbmdlT2JzZXJ2ZXIiLG4pLCEwfSgpfHwod2luZG93Ll9fVFJBTlNQQVJFTkNZX09CU0VSVkVSU19fPVQsMCl8fCFmdW5jdGlvbigpe2NvbnN0IGU9eihQKTtpZihudWxsPT09ZSlyZXR1cm4hMTtjb25zdCBuPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoTCksdD1NKHtlbGVtZW50TmFtZToic3R5bGUiLGFwcGVuZFRvOmRvY3VtZW50LmhlYWQsaHRtbFByb3BzOntpZDpvLGlubmVySFRNTDpSKCl9fSk7cmV0dXJuIHcuc2V0KCJvdmVybGF5QmFyRWxlbWVudCIsbikuc2V0KCJvdmVybGF5RGFya2VuZXJFbGVtZW50IixlKS5zZXQoIm1haW5TdHlsZVNoZWV0Iix0KSwhMH0oKSlyZXR1cm4gdm9pZCBGKCk7dmFyIGksYyxtO00oe2VsZW1lbnROYW1lOiJzdHlsZSIsYXBwZW5kVG86ZG9jdW1lbnQuaGVhZCxodG1sUHJvcHM6e2lkOnMsaW5uZXJIVE1MOl99fSk7Y29uc3R7YWN0aW9uc1BhbmVsOnAsdG9nZ2xlQWN0aW9uc1BhbmVsOmJ9PWZ1bmN0aW9uKCl7Y29uc3QgZT1NKHtlbGVtZW50TmFtZToiZGl2IixhcHBlbmRUbzpkb2N1bWVudC5ib2R5LGh0bWxQcm9wczp7aWQ6cn19KSxuPU0oe2VsZW1lbnROYW1lOiJkaXYiLGFwcGVuZFRvOmRvY3VtZW50LmJvZHksaHRtbFByb3BzOntpZDphfX0pLHQ9ZnVuY3Rpb24oZSxuKXtjb25zdCB0PXcuZ2V0KCJtYWluU3R5bGVTaGVldCIpO2xldCBvO3JldHVybiBmdW5jdGlvbigpe2NvbnN0IHI9ZS5jbGFzc0xpc3QuY29udGFpbnMoZyksYT10Lmhhc0F0dHJpYnV0ZSgibWVkaWEiKTtpZihjbGVhclRpbWVvdXQobyksIXImJiFhKXJldHVybiBlLnN0eWxlLmRpc3BsYXk9ImJsb2NrIixuLnN0eWxlLmRpc3BsYXk9ImJsb2NrIix2b2lkIHNldFRpbWVvdXQoKCgpPT5lLmNsYXNzTGlzdC5hZGQoZykpLDIwKTtyJiYoZS5jbGFzc0xpc3QucmVtb3ZlKGcpLG4uc3R5bGUuZGlzcGxheT0ibm9uZSIsbz1zZXRUaW1lb3V0KCgoKT0+e2Uuc3R5bGUuZGlzcGxheT0ibm9uZSJ9KSwxZTMpKX19KGUsbik7bi5vbmNsaWNrPXQsTSh7ZWxlbWVudE5hbWU6InN0eWxlIixhcHBlbmRUbzpkb2N1bWVudC5oZWFkLGh0bWxQcm9wczp7aWQ6bCxpbm5lckhUTUw6U319KSxudWxsIT09dy5nZXQoIm92ZXJsYXlCYXJFbGVtZW50IikmJihlLnN0eWxlLnBhZGRpbmdUb3A9IjIwcHgiKTtmb3IoY29uc3QgbiBvZiBLKXtjb25zdCB0PU0oe2VsZW1lbnROYW1lOiJkaXYiLGFwcGVuZFRvOmUsaHRtbFByb3BzOntjbGFzc05hbWU6aCx0ZXh0Q29udGVudDpuLm5hbWV9fSk7dC5vbmNsaWNrPSgpPT5VKG4sdCl9cmV0dXJue2FjdGlvbnNQYW5lbDplLHRvZ2dsZUFjdGlvbnNQYW5lbDp0fX0oKTtEKHt0ZXh0OiJXZWxjb21lISA8YnI+PGJyPlRvIHRvZ2dsZSB0aGUgYWN0aW9ucyBwYW5lbCwgcHJlc3MgPGI+Q1RSTCArIFNISUZUICsgWDwvYj48YnI+VG8gdG9nZ2xlIHRoZSB0aGVtZSwgcHJlc3MgPGI+Q1RSTCArIEQ8L2I+Iix0aW1lb3V0OjFlNCxjb250YWluc0hUTUw6ITB9KS50aGVuKCgoKT0+eyhmdW5jdGlvbigpe2NvbnN0IGU9Ti5nZXQoImlzRGFya1RoZW1lIiksbj13LmdldCgib3ZlcmxheUJhckVsZW1lbnQiKTtpZihudWxsIT09bilyZXR1cm4hZSYmbi5jbGFzc0xpc3QuY29udGFpbnModSk7Y29uc3QgdD16KCIuYmctMVFJQXVzIik7cmV0dXJuIG51bGwhPT10JiYhZSYmdC5jbGFzc0xpc3QuY29udGFpbnModSl9KSgpJiYoRCh7dGV4dDoiPGI+8J+bkSBXYXJuaW5nPC9iPjxicj48YnI+WW91ciBzaWRlYmFyIGlzIGN1cnJlbnRseSBkYXJrIHRoZW1lZC48YnI+Rm9yIHByb3BlciB0ZXh0IHZpc2liaWxpdHksIGRpc2FibGUgaXRzIGRhcmsgdGhlbWUgaW4gU2V0dGluZ3MgPiBBcHBlYXJhbmNlLjxicj48YnI+VGhlIHRoZW1lIGhhcyBkaXNhYmxlZCBpdHNlbGYuIEFmdGVyIGRpc2FibGluZyB0aGUgc2lkZWJhcidzIGRhcmsgdGhlbWUsIHlvdSBjYW4gcmVhY3RpdmF0ZSB0aGUgdGhlbWUgYnkgcHJlc3NpbmcgPGI+Q1RSTCArIEQ8L2I+LiA8dT5ObyBuZWVkIHRvIHJlZnJlc2g8L3U+LiIsdGltZW91dDoxNWUzLGNvbnRhaW5zSFRNTDohMH0pLEUocCkpfSkpLHdpbmRvdy5vbmtleWRvd249ZT0+e2UuY3RybEtleSYmKGUuc2hpZnRLZXkmJiJLZXlYIj09PWUuY29kZSYmKGUucHJldmVudERlZmF1bHQoKSxiKCkpLCJLZXlEIj09PWUuY29kZSYmKGUucHJldmVudERlZmF1bHQoKSxFKHApKSl9LGNvbnNvbGUubG9nKCJMaXN0ZW5lciBzZXQuIiksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoImNvbnRleHRtZW51IixXLHtjYXB0dXJlOiEwfSl9KCl9KSgpOw==",
            "base64"
          ).toString("utf8")
        );
      });
      